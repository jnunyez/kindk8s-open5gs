apiVersion: v1
data:
  pcrf.conf: "# This is a sample configuration file for freeDiameter daemon.\n\n#
    Most of the options can be omitted, as they default to reasonable values.\n# Only
    TLS-related options must be configured properly in usual setups.\n\n# It is possible
    to use \"include\" keyword to import additional files\n# e.g.: include \"/etc/freeDiameter.d/*.conf\"\n#
    This is exactly equivalent as copy & paste the content of the included file(s)
    \n# where the \"include\" keyword is found.\n\n\n##############################################################\n##
    \ Peer identity and realm \n\n# The Diameter Identity of this daemon.\n# This
    must be a valid FQDN that resolves to the local host.\n# Default: hostname's FQDN\n#Identity
    = \"aaa.koganei.freediameter.net\";\nIdentity = \"pcrf.localdomain\";\n\n# The
    Diameter Realm of this daemon.\n# Default: the domain part of Identity (after
    the first dot).\n#Realm = \"koganei.freediameter.net\";\nRealm = \"localdomain\";\n\n##############################################################\n##
    \ Transport protocol configuration\n\n# The port this peer is listening on for
    incoming connections (TCP and SCTP).\n# Default: 3868. Use 0 to disable.\n#Port
    = 3868;\n\n# The port this peer is listening on for incoming TLS-protected connections
    (TCP and SCTP).\n# See TLS_old_method for more information about TLS flavours.\n#
    Note: we use TLS/SCTP instead of DTLS/SCTP at the moment. This will change in
    future version of freeDiameter.\n# Default: 5868. Use 0 to disable.\n#SecPort
    = 5868;\n\n# Use RFC3588 method for TLS protection, where TLS is negociated after
    CER/CEA exchange is completed \n# on the unsecure connection. The alternative
    is RFC6733 mechanism, where TLS protects also the \n# CER/CEA exchange on a dedicated
    secure port.\n# This parameter only affects outgoing connections. \n# The setting
    can be also defined per-peer (see Peers configuration section).\n# Default: use
    RFC6733 method with separate port for TLS.\n#TLS_old_method;\n\n# Disable use
    of TCP protocol (only listen and connect over SCTP)\n# Default : TCP enabled\n#No_TCP;\n\n#
    Disable use of SCTP protocol (only listen and connect over TCP)\n# Default : SCTP
    enabled\n#No_SCTP;\n# This option is ignored if freeDiameter is compiled with
    DISABLE_SCTP option.\n\n# Prefer TCP instead of SCTP for establishing new connections.\n#
    This setting may be overwritten per peer in peer configuration blocs.\n# Default
    : SCTP is attempted first.\n#Prefer_TCP;\n\n# Default number of streams per SCTP
    associations.\n# This setting may be overwritten per peer basis.\n# Default :
    30 streams\n#SCTP_streams = 30;\n\n##############################################################\n##
    \ Endpoint configuration\n\n# Disable use of IP addresses (only IPv6)\n# Default
    : IP enabled\n#No_IP;\n\n# Disable use of IPv6 addresses (only IP)\n# Default
    : IPv6 enabled\n#No_IPv6;\n\n# Specify local addresses the server must bind to\n#
    Default : listen on all addresses available.\n#ListenOn = \"202.249.37.5\";\n#ListenOn
    = \"2001:200:903:2::202:1\";\n#ListenOn = \"fe80::21c:5ff:fe98:7d62%eth0\";\nListenOn
    = \"0.0.0.0\";\n\n\n##############################################################\n##
    \ Server configuration\n\n# How many Diameter peers are allowed to be connecting
    at the same time ?\n# This parameter limits the number of incoming connections
    from the time\n# the connection is accepted until the first CER is received.\n#
    Default: 5 unidentified clients in paralel.\n#ThreadsPerServer = 5;\n\n##############################################################\n##
    \ TLS Configuration\n\n# TLS is managed by the GNUTLS library in the freeDiameter
    daemon.\n# You may find more information about parameters and special behaviors\n#
    in the relevant documentation.\n# http://www.gnu.org/software/gnutls/manual/\n\n#
    Credentials of the local peer\n# The X509 certificate and private key file to
    use for the local peer.\n# The files must contain PKCS-1 encoded RSA key, in PEM
    format.\n# (These parameters are passed to gnutls_certificate_set_x509_key_file
    function)\n# Default : NO DEFAULT\n#TLS_Cred = \"<x509 certif file.PEM>\" , \"<x509
    private key file.PEM>\";\n#TLS_Cred = \"/etc/ssl/certs/freeDiameter.pem\", \"/etc/ssl/private/freeDiameter.key\";\nTLS_Cred
    = \"/etc/tls/tls.crt\", \"/etc/tls/tls.key\";\n\n# Certificate authority / trust
    anchors\n# The file containing the list of trusted Certificate Authorities (PEM
    list)\n# (This parameter is passed to gnutls_certificate_set_x509_trust_file function)\n#
    The directive can appear several times to specify several files.\n# Default :
    GNUTLS default behavior\n#TLS_CA = \"<file.PEM>\";\nTLS_CA = \"/etc/tls/ca.crt\";\n\n#
    Certificate Revocation List file\n# The information about revoked certificates.\n#
    The file contains a list of trusted CRLs in PEM format. They should have been
    verified before. \n# (This parameter is passed to gnutls_certificate_set_x509_crl_file
    function)\n# Note: openssl CRL format might have interoperability issue with GNUTLS
    format.\n# Default : GNUTLS default behavior\n#TLS_CRL = \"<file.PEM>\";\n\n#
    GNU TLS Priority string\n# This string allows to configure the behavior of GNUTLS
    key exchanges \n# algorithms. See gnutls_priority_init function documentation
    for information.\n# You should also refer to the Diameter required TLS support
    here:\n#   http://tools.ietf.org/html/rfc6733#section-13.1\n# Default : \"NORMAL\"\n#
    Example: TLS_Prio = \"NONE:+VERS-TLS1.1:+AES-128-CBC:+RSA:+SHA1:+COMP-NULL\";\n#TLS_Prio
    = \"NORMAL\";\n\n# Diffie-Hellman parameters size\n# Set the number of bits for
    generated DH parameters\n# Valid value should be 768, 1024, 2048, 3072 or 4096.\n#
    (This parameter is passed to gnutls_dh_params_generate2 function, \n# it usually
    should match RSA key size)\n# Default : 1024\n#TLS_DH_Bits = 1024;\n\n# Alternatively,
    you can specify a file to load the PKCS#3 encoded\n# DH parameters directly from.
    This accelerates the daemon start \n# but is slightly less secure. If this file
    is provided, the\n# TLS_DH_Bits parameters has no effect.\n# Default : no default.\n#TLS_DH_File
    = \"<file.PEM>\";\n\n\n##############################################################\n##
    \ Timers configuration\n\n# The Tc timer of this peer.\n# It is the delay before
    a new attempt is made to reconnect a disconnected peer.\n# The value is expressed
    in seconds. The recommended value is 30 seconds.\n# Default: 30\n#TcTimer = 30;\n\n#
    The Tw timer of this peer.\n# It is the delay before a watchdog message is sent,
    as described in RFC 3539.\n# The value is expressed in seconds. The default value
    is 30 seconds. Value must\n# be greater or equal to 6 seconds. See details in
    the RFC.\n# Default: 30\n#TwTimer = 30;\n\n##############################################################\n##
    \ Applications configuration\n\n# Disable the relaying of Diameter messages?\n#
    For messages not handled locally, the default behavior is to forward the\n# message
    to another peer if any is available, according to the routing \n# algorithms.
    In addition the \"0xffffff\" application is advertised in CER/CEA \n# exchanges.\n#
    Default: Relaying is enabled.\n#NoRelay;\n\n# Number of server threads that can
    handle incoming messages at the same time.\n# Default: 4\n#AppServThreads = 4;\n\n#
    Other applications are configured by loaded extensions.\n\n##############################################################\n##
    \ Extensions configuration\n\n#  The freeDiameter framework merely provides support
    for\n# Diameter Base Protocol. The specific application behaviors,\n# as well
    as advanced functions, are provided\n# by loadable extensions (plug-ins).\n#  These
    extensions may in addition receive the name of a \n# configuration file, the format
    of which is extension-specific.\n#\n# Format:\n#LoadExtension = \"/path/to/extension\"
    [ : \"/optional/configuration/file\" ] ;\n#\n# Examples:\n#LoadExtension = \"extensions/sample.fdx\";\n#LoadExtension
    = \"extensions/sample.fdx\":\"conf/sample.conf\";\n\n# Extensions are named as
    follow:\n# dict_* for extensions that add content to the dictionary definitions.\n#
    dbg_*  for extensions useful only to retrieve more information on the framework
    execution.\n# acl_*  : Access control list, to control which peers are allowed
    to connect.\n# rt_*   : routing extensions that impact how messages are forwarded
    to other peers.\n# app_*  : applications, these extensions usually register callbacks
    to handle specific messages.\n# test_* : dummy extensions that are useful only
    in testing environments.\n\n\n# The dbg_msg_dump.fdx extension allows you to tweak
    the way freeDiameter displays some\n# information about some events. This extension
    does not actually use a configuration file\n# but receives directly a parameter
    in the string passed to the extension. Here are some examples:\n## LoadExtension
    = \"dbg_msg_dumps.fdx\" : \"0x1111\"; # Removes all default hooks, very quiet
    even in case of errors.\n## LoadExtension = \"dbg_msg_dumps.fdx\" : \"0x2222\";
    # Display all events with few details.\n## LoadExtension = \"dbg_msg_dumps.fdx\"
    : \"0x0080\"; # Dump complete information about sent and received messages.\n#
    The four digits respectively control: connections, routing decisions, sent/received
    messages, errors.\n# The values for each digit are:\n#  0 - default - keep the
    default behavior\n#  1 - quiet   - remove any specific log\n#  2 - compact - display
    only a summary of the information\n#  4 - full    - display the complete information
    on a single long line\n#  8 - tree    - display the complete information in an
    easier to read format spanning several lines.\n\nLoadExtension = \"/lib64/freeDiameter/dbg_msg_dumps.fdx\"
    : \"0x8888\";\nLoadExtension = \"/lib64/freeDiameter/dict_rfc5777.fdx\";\nLoadExtension
    = \"/lib64/freeDiameter/dict_mip6i.fdx\";\nLoadExtension = \"/lib64/freeDiameter/dict_nasreq.fdx\";\nLoadExtension
    = \"/lib64/freeDiameter/dict_nas_mipv6.fdx\";\nLoadExtension = \"/lib64/freeDiameter/dict_dcca.fdx\";\nLoadExtension
    = \"/lib64/freeDiameter/dict_dcca_3gpp.fdx\";\n\n\n##############################################################\n##
    \ Peers configuration\n\n#  The local server listens for incoming connections.
    By default,\n# all unknown connecting peers are rejected. Extensions can override
    this behavior (e.g., acl_wl).\n# \n#  In addition to incoming connections, the
    local peer can\n# be configured to establish and maintain connections to some
    \n# Diameter nodes and allow connections from these nodes.\n#  This is achieved
    with the ConnectPeer directive described below.\n#\n# Note that the configured
    Diameter Identity MUST match\n# the information received inside CEA, or the connection
    will be aborted.\n#\n# Format:\n#ConnectPeer = \"diameterid\" [ { parameter1;
    parameter2; ...} ] ;\n# Parameters that can be specified in the peer's parameter
    list:\n#  No_TCP; No_SCTP; No_IP; No_IPv6; Prefer_TCP; TLS_old_method;\n#  No_TLS;
    \      # assume transparent security instead of TLS. DTLS is not supported yet
    (will change in future versions).\n#  Port = 5868;  # The port to connect to\n#
    \ TcTimer = 30;\n#  TwTimer = 30;\n#  ConnectTo = \"202.249.37.5\";\n#  ConnectTo
    = \"2001:200:903:2::202:1\";\n#  TLS_Prio = \"NORMAL\";\n#  Realm = \"realm.net\";
    # Reject the peer if it does not advertise this realm.\n# Examples:\n#ConnectPeer
    = \"aaa.wide.ad.jp\";\n#ConnectPeer = \"old.diameter.serv\" { TcTimer = 60; TLS_old_method;
    No_SCTP; Port=3868; } ;\nConnectPeer = \"smf.localdomain\" { ConnectTo = \"smf\";
    No_TLS; };\n\n##############################################################\n"
  pcrf.yaml: |
    db_uri: $MONGODB_URI

    logger:
        file: /var/log/open5gs/pcrf.log
        trace:
            app: 1
            diameter: 1

    parameter:

    pcrf:
        freeDiameter: /etc/freeDiameter/pcrf.conf
kind: ConfigMap
metadata:
  creationTimestamp: "2021-07-05T14:24:02Z"
  labels:
    app.kubernetes.io/part-of: open5gs
    name: pcrf
  managedFields:
  name: pcrf
  namespace: $NS