#!/bin/bash
set -e

HERE=$( cd "$(dirname "$0")" ; pwd -P )
. "$HERE/_env"
. "$HERE/_functions"

BASE=$HERE/work/mongodb-kubernetes-operator

if [ ! -d "$BASE" ]; then
    m 'cloning repository...'
    git clone https://github.com/mongodb/mongodb-kubernetes-operator.git "$BASE" --depth 1
fi

m 'deploying MongoDB operator...'
if ! oc get namespace "$OPEN5GS_MONGO_NS"
then
  oc create namespace "$OPEN5GS_MONGO_NS"
fi
oc apply --filename="$BASE/config/crd/bases/mongodbcommunity.mongodb.com_mongodbcommunity.yaml"
oc apply --kustomize="$BASE/config/rbac/"
oc apply --filename="$HERE/manifests/operator_openshift.yaml" 
oc wait deployments/mongodb-kubernetes-operator --for=condition=Available
POD=$(oc get pods --selector=name=mongodb-kubernetes-operator --output=jsonpath="{.items[0].metadata.name}")
oc wait "pods/$POD" --for=condition=ContainersReady

if [ "$1" == -c ]; then
    m 'cleaning up...'
    oc delete mongodbcommunity --selector=app.kubernetes.io/part-of=open5gs --ignore-not-found=true
    oc wait statefulsets --selector=app=open5gs-mongodb-svc --for=delete || true
    oc wait pods --selector=app=open5gs-mongodb-svc --for=delete || true
    oc delete persistentvolumeclaims --selector=app=open5gs-mongodb-svc --ignore-not-found=true
    oc wait persistentvolumeclaims --selector=app=open5gs-mongodb-svc --for=delete || true
fi

m 'deploying... (may take some time!)'

VERSION=$OPEN5GS_VERSION \
MONGODB_VERSION=$MONGODB_VERSION \
MONGO_NS=$OPEN5GS_MONGO_NS \
envsubst < "$HERE/manifests/mongodb-replicaset.yaml" |
kubectl apply -f -

PHASE=
while [ "$PHASE" != Running ]; do
    PHASE=$(oc get mongodbcommunity open5gs-mongodb --output=jsonpath="{.status.phase}")
    echo -n .
    sleep 1
done
echo
