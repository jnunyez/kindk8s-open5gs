#!/bin/bash
set -e

HERE=$( cd "$(dirname "$0")" ; pwd -P )
. "$HERE/_env"

BASE=$HERE/work/mongodb-kubernetes-operator

if [ ! -d "$BASE" ]; then
    m 'cloning repository...'
    git clone https://github.com/mongodb/mongodb-kubernetes-operator.git "$BASE" --depth 1
fi

m 'deploying MongoDB operator...'
oc create namespace $OPEN5GS_MONGO_NS
oc apply --filename="$BASE/config/crd/bases/mongodbcommunity.mongodb.com_mongodbcommunity.yaml"
oc apply --kustomize="$BASE/config/rbac/"
oc apply --filename="$BASE/deploy/openshift/operator_openshift.yaml"
oc wait deployments/mongodb-kubernetes-operator --for=condition=Available
echo "get pods falla"
POD=$(oc get pods --selector=name=mongodb-kubernetes-operator --output=jsonpath="{.items[0].metadata.name}")
oc wait "pods/$POD" --for=condition=ContainersReady

if [ "$1" == -c ]; then
    m 'cleaning up...'
    kubectl delete mongodbcommunity --selector=app.kubernetes.io/part-of=open5gs --ignore-not-found=true
    kubectl wait statefulsets --selector=app=open5gs-mongodb-svc --for=delete || true
    kubectl wait pods --selector=app=open5gs-mongodb-svc --for=delete || true
    kubectl delete persistentvolumeclaims --selector=app=open5gs-mongodb-svc --ignore-not-found=true
    kubectl wait persistentvolumeclaims --selector=app=open5gs-mongodb-svc --for=delete || true
    kubectl delete namespace $OPEN5GS_MONGO_NS
fi

m 'deploying... (may take some time!)'

VERSION=$OPEN5GS_VERSION \
MONGODB_VERSION=$MONGODB_VERSION \
MONGO_NS=$OPEN5GS_MONGO_NS \
envsubst < "$HERE/manifests/mongodb-replicaset.yaml" |
kubectl apply -f -

PHASE=
while [ "$PHASE" != Running ]; do
    PHASE=$(oc get mongodbcommunity open5gs-mongodb --output=jsonpath="{.status.phase}")
    echo -n .
    sleep 1
done
echo
