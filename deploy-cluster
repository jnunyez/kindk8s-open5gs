#!/bin/sh
set -o errexit

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")

# create insecure registry container unless it already exists
#reg_name='kind-registry'
#reg_port='5000'
#running="$(docker inspect -f '{{.State.Running}}' "${reg_name}" 2>/dev/null || true)"
#if [ "${running}" != 'true' ]; then
#  docker run \
#    -d --restart=always -p "127.0.0.1:${reg_port}:5000" --name "${reg_name}" \
#    registry:2
#fi
#we rely on pub registry now


# now we create cluster with the local registry envabled
kind create cluster --config=$HERE/manifests/kind/kind-cluster.yaml

#docker network connect "kind" "${reg_name}" || true

# Document the local registry
# https://github.com/kubernetes/enhancements/tree/master/keps/sig-cluster-lifecycle/generic/1755-communicating-a-local-registry
#cat <<EOF | kubectl apply -f -
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: local-registry-hosting
#  namespace: kube-public
#data:
#  localRegistryHosting.v1: |
#    host: "localhost:${reg_port}"
#    help: "https://kind.sigs.k8s.io/docs/user/local-registry/"
#EOF
